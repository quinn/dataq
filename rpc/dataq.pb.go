// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.29.1
// source: rpc/dataq.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InstallRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PluginId      string                 `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallRequest) Reset() {
	*x = InstallRequest{}
	mi := &file_rpc_dataq_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallRequest) ProtoMessage() {}

func (x *InstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallRequest.ProtoReflect.Descriptor instead.
func (*InstallRequest) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{0}
}

func (x *InstallRequest) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

type InstallResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	PluginId      string                     `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	Configs       []*PluginConfig            `protobuf:"bytes,2,rep,name=configs,proto3" json:"configs,omitempty"`
	Oauth         *OAuth2                    `protobuf:"bytes,3,opt,name=oauth,proto3" json:"oauth,omitempty"`
	Extracts      []*InstallResponse_Extract `protobuf:"bytes,4,rep,name=extracts,proto3" json:"extracts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallResponse) Reset() {
	*x = InstallResponse{}
	mi := &file_rpc_dataq_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallResponse) ProtoMessage() {}

func (x *InstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallResponse.ProtoReflect.Descriptor instead.
func (*InstallResponse) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{1}
}

func (x *InstallResponse) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *InstallResponse) GetConfigs() []*PluginConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

func (x *InstallResponse) GetOauth() *OAuth2 {
	if x != nil {
		return x.Oauth
	}
	return nil
}

func (x *InstallResponse) GetExtracts() []*InstallResponse_Extract {
	if x != nil {
		return x.Extracts
	}
	return nil
}

type PluginConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginConfig) Reset() {
	*x = PluginConfig{}
	mi := &file_rpc_dataq_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginConfig) ProtoMessage() {}

func (x *PluginConfig) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginConfig.ProtoReflect.Descriptor instead.
func (*PluginConfig) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{2}
}

func (x *PluginConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PluginConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// ExtractRequest contains information about what data to extract
type ExtractRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Oauth         *OAuth2                `protobuf:"bytes,5,opt,name=oauth,proto3" json:"oauth,omitempty"`
	PluginId      string                 `protobuf:"bytes,4,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`       // Plugin to use for extraction
	ParentHash    string                 `protobuf:"bytes,1,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"` // Content address of the object responsible for creating the Extract
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`                               // Operation to be performed that will produce data
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractRequest) Reset() {
	*x = ExtractRequest{}
	mi := &file_rpc_dataq_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractRequest) ProtoMessage() {}

func (x *ExtractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractRequest.ProtoReflect.Descriptor instead.
func (*ExtractRequest) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{3}
}

func (x *ExtractRequest) GetOauth() *OAuth2 {
	if x != nil {
		return x.Oauth
	}
	return nil
}

func (x *ExtractRequest) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *ExtractRequest) GetParentHash() string {
	if x != nil {
		return x.ParentHash
	}
	return ""
}

func (x *ExtractRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ExtractRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ExtractResponse contains the result of an extraction
type ExtractResponse struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Kind        string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`                                  // Kind of content being stored
	RequestHash string                 `protobuf:"bytes,3,opt,name=request_hash,json=requestHash,proto3" json:"request_hash,omitempty"` // Address of the request
	// Types that are valid to be assigned to Data:
	//
	//	*ExtractResponse_Hash
	//	*ExtractResponse_Content
	Data          isExtractResponse_Data       `protobuf_oneof:"data"`
	Transforms    []*ExtractResponse_Transform `protobuf:"bytes,4,rep,name=transforms,proto3" json:"transforms,omitempty"` // List of transform requests to be created
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractResponse) Reset() {
	*x = ExtractResponse{}
	mi := &file_rpc_dataq_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractResponse) ProtoMessage() {}

func (x *ExtractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractResponse.ProtoReflect.Descriptor instead.
func (*ExtractResponse) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{4}
}

func (x *ExtractResponse) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ExtractResponse) GetRequestHash() string {
	if x != nil {
		return x.RequestHash
	}
	return ""
}

func (x *ExtractResponse) GetData() isExtractResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ExtractResponse) GetHash() string {
	if x != nil {
		if x, ok := x.Data.(*ExtractResponse_Hash); ok {
			return x.Hash
		}
	}
	return ""
}

func (x *ExtractResponse) GetContent() []byte {
	if x != nil {
		if x, ok := x.Data.(*ExtractResponse_Content); ok {
			return x.Content
		}
	}
	return nil
}

func (x *ExtractResponse) GetTransforms() []*ExtractResponse_Transform {
	if x != nil {
		return x.Transforms
	}
	return nil
}

type isExtractResponse_Data interface {
	isExtractResponse_Data()
}

type ExtractResponse_Hash struct {
	Hash string `protobuf:"bytes,5,opt,name=hash,proto3,oneof"` // Address of the data
}

type ExtractResponse_Content struct {
	Content []byte `protobuf:"bytes,6,opt,name=content,proto3,oneof"` // Extracted data
}

func (*ExtractResponse_Hash) isExtractResponse_Data() {}

func (*ExtractResponse_Content) isExtractResponse_Data() {}

// TransformRequest represents an action to be performed on data
type TransformRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	PluginId string                 `protobuf:"bytes,4,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"` // Plugin to use for transformation
	// Types that are valid to be assigned to Data:
	//
	//	*TransformRequest_Hash
	//	*TransformRequest_Content
	Data          isTransformRequest_Data `protobuf_oneof:"data"`
	Kind          string                  `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"` // Kind of transform to be applied
	Metadata      map[string]string       `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransformRequest) Reset() {
	*x = TransformRequest{}
	mi := &file_rpc_dataq_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransformRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformRequest) ProtoMessage() {}

func (x *TransformRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformRequest.ProtoReflect.Descriptor instead.
func (*TransformRequest) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{5}
}

func (x *TransformRequest) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *TransformRequest) GetData() isTransformRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TransformRequest) GetHash() string {
	if x != nil {
		if x, ok := x.Data.(*TransformRequest_Hash); ok {
			return x.Hash
		}
	}
	return ""
}

func (x *TransformRequest) GetContent() []byte {
	if x != nil {
		if x, ok := x.Data.(*TransformRequest_Content); ok {
			return x.Content
		}
	}
	return nil
}

func (x *TransformRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TransformRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isTransformRequest_Data interface {
	isTransformRequest_Data()
}

type TransformRequest_Hash struct {
	Hash string `protobuf:"bytes,5,opt,name=hash,proto3,oneof"` // Address of the data
}

type TransformRequest_Content struct {
	Content []byte `protobuf:"bytes,6,opt,name=content,proto3,oneof"` // Extracted data
}

func (*TransformRequest_Hash) isTransformRequest_Data() {}

func (*TransformRequest_Content) isTransformRequest_Data() {}

// TransformResponse contains the result of a transform operation
type TransformResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Kind          string                         `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`                                  // Kind from request
	RequestHash   string                         `protobuf:"bytes,3,opt,name=request_hash,json=requestHash,proto3" json:"request_hash,omitempty"` // Address of request
	Extracts      []*TransformResponse_Extract   `protobuf:"bytes,4,rep,name=extracts,proto3" json:"extracts,omitempty"`                          // List of extracts to be performed
	Permanodes    []*TransformResponse_Permanode `protobuf:"bytes,5,rep,name=permanodes,proto3" json:"permanodes,omitempty"`                      // List of permanodes to be managed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransformResponse) Reset() {
	*x = TransformResponse{}
	mi := &file_rpc_dataq_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransformResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformResponse) ProtoMessage() {}

func (x *TransformResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformResponse.ProtoReflect.Descriptor instead.
func (*TransformResponse) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{6}
}

func (x *TransformResponse) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TransformResponse) GetRequestHash() string {
	if x != nil {
		return x.RequestHash
	}
	return ""
}

func (x *TransformResponse) GetExtracts() []*TransformResponse_Extract {
	if x != nil {
		return x.Extracts
	}
	return nil
}

func (x *TransformResponse) GetPermanodes() []*TransformResponse_Permanode {
	if x != nil {
		return x.Permanodes
	}
	return nil
}

// DataSource identifies an object within a specific plugin
type DataSource struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	PermanodeHash         string                 `protobuf:"bytes,1,opt,name=permanode_hash,json=permanodeHash,proto3" json:"permanode_hash,omitempty"`
	TransformResponseHash string                 `protobuf:"bytes,2,opt,name=transform_response_hash,json=transformResponseHash,proto3" json:"transform_response_hash,omitempty"`
	Plugin                string                 `protobuf:"bytes,3,opt,name=plugin,proto3" json:"plugin,omitempty"` // Unique identifier for the plugin
	Key                   string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`       // Value to uniquely identify plugin's internal representation
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DataSource) Reset() {
	*x = DataSource{}
	mi := &file_rpc_dataq_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSource) ProtoMessage() {}

func (x *DataSource) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSource.ProtoReflect.Descriptor instead.
func (*DataSource) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{7}
}

func (x *DataSource) GetPermanodeHash() string {
	if x != nil {
		return x.PermanodeHash
	}
	return ""
}

func (x *DataSource) GetTransformResponseHash() string {
	if x != nil {
		return x.TransformResponseHash
	}
	return ""
}

func (x *DataSource) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *DataSource) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// PermanodeVersion represents a versioned permanode
type PermanodeVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PermanodeHash string                 `protobuf:"bytes,1,opt,name=permanode_hash,json=permanodeHash,proto3" json:"permanode_hash,omitempty"` // Hash of the permanode
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                             // Version timestamp
	Deleted       bool                   `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`                                 // Deletion status
	Source        *DataSource            `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`                                    // Source of the permanode version
	// Types that are valid to be assigned to Payload:
	//
	//	*PermanodeVersion_Email
	//	*PermanodeVersion_FinancialTransaction
	Payload       isPermanodeVersion_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermanodeVersion) Reset() {
	*x = PermanodeVersion{}
	mi := &file_rpc_dataq_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermanodeVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermanodeVersion) ProtoMessage() {}

func (x *PermanodeVersion) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermanodeVersion.ProtoReflect.Descriptor instead.
func (*PermanodeVersion) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{8}
}

func (x *PermanodeVersion) GetPermanodeHash() string {
	if x != nil {
		return x.PermanodeHash
	}
	return ""
}

func (x *PermanodeVersion) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PermanodeVersion) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *PermanodeVersion) GetSource() *DataSource {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *PermanodeVersion) GetPayload() isPermanodeVersion_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *PermanodeVersion) GetEmail() *Email {
	if x != nil {
		if x, ok := x.Payload.(*PermanodeVersion_Email); ok {
			return x.Email
		}
	}
	return nil
}

func (x *PermanodeVersion) GetFinancialTransaction() *FinancialTransaction {
	if x != nil {
		if x, ok := x.Payload.(*PermanodeVersion_FinancialTransaction); ok {
			return x.FinancialTransaction
		}
	}
	return nil
}

type isPermanodeVersion_Payload interface {
	isPermanodeVersion_Payload()
}

type PermanodeVersion_Email struct {
	Email *Email `protobuf:"bytes,6,opt,name=email,proto3,oneof"`
}

type PermanodeVersion_FinancialTransaction struct {
	FinancialTransaction *FinancialTransaction `protobuf:"bytes,7,opt,name=financial_transaction,json=financialTransaction,proto3,oneof"`
}

func (*PermanodeVersion_Email) isPermanodeVersion_Payload() {}

func (*PermanodeVersion_FinancialTransaction) isPermanodeVersion_Payload() {}

type InstallResponse_Extract struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Label         string                 `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Configs       []*PluginConfig        `protobuf:"bytes,2,rep,name=configs,proto3" json:"configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallResponse_Extract) Reset() {
	*x = InstallResponse_Extract{}
	mi := &file_rpc_dataq_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallResponse_Extract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallResponse_Extract) ProtoMessage() {}

func (x *InstallResponse_Extract) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallResponse_Extract.ProtoReflect.Descriptor instead.
func (*InstallResponse_Extract) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{1, 0}
}

func (x *InstallResponse_Extract) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *InstallResponse_Extract) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *InstallResponse_Extract) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InstallResponse_Extract) GetConfigs() []*PluginConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

// Transform defines a transform operation to be performed
type ExtractResponse_Transform struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`                                                                                   // Name of the transform
	Metadata      map[string]string      `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional information for the transform
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractResponse_Transform) Reset() {
	*x = ExtractResponse_Transform{}
	mi := &file_rpc_dataq_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractResponse_Transform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractResponse_Transform) ProtoMessage() {}

func (x *ExtractResponse_Transform) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractResponse_Transform.ProtoReflect.Descriptor instead.
func (*ExtractResponse_Transform) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ExtractResponse_Transform) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ExtractResponse_Transform) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Extract defines an extract operation to be performed
type TransformResponse_Extract struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`                                                                                   // Operation to perform
	Metadata      map[string]string      `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Data necessary to perform the operation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransformResponse_Extract) Reset() {
	*x = TransformResponse_Extract{}
	mi := &file_rpc_dataq_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransformResponse_Extract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformResponse_Extract) ProtoMessage() {}

func (x *TransformResponse_Extract) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformResponse_Extract.ProtoReflect.Descriptor instead.
func (*TransformResponse_Extract) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{6, 0}
}

func (x *TransformResponse_Extract) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TransformResponse_Extract) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type TransformResponse_Permanode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Kind  string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"` // Kind of permanode to be managed
	Key   string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`   // Value to uniquely identify the permanode within the plugin
	// Types that are valid to be assigned to Payload:
	//
	//	*TransformResponse_Permanode_Email
	//	*TransformResponse_Permanode_FinancialTransaction
	Payload       isTransformResponse_Permanode_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransformResponse_Permanode) Reset() {
	*x = TransformResponse_Permanode{}
	mi := &file_rpc_dataq_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransformResponse_Permanode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformResponse_Permanode) ProtoMessage() {}

func (x *TransformResponse_Permanode) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_dataq_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformResponse_Permanode.ProtoReflect.Descriptor instead.
func (*TransformResponse_Permanode) Descriptor() ([]byte, []int) {
	return file_rpc_dataq_proto_rawDescGZIP(), []int{6, 1}
}

func (x *TransformResponse_Permanode) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TransformResponse_Permanode) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TransformResponse_Permanode) GetPayload() isTransformResponse_Permanode_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TransformResponse_Permanode) GetEmail() *Email {
	if x != nil {
		if x, ok := x.Payload.(*TransformResponse_Permanode_Email); ok {
			return x.Email
		}
	}
	return nil
}

func (x *TransformResponse_Permanode) GetFinancialTransaction() *FinancialTransaction {
	if x != nil {
		if x, ok := x.Payload.(*TransformResponse_Permanode_FinancialTransaction); ok {
			return x.FinancialTransaction
		}
	}
	return nil
}

type isTransformResponse_Permanode_Payload interface {
	isTransformResponse_Permanode_Payload()
}

type TransformResponse_Permanode_Email struct {
	Email *Email `protobuf:"bytes,6,opt,name=email,proto3,oneof"`
}

type TransformResponse_Permanode_FinancialTransaction struct {
	FinancialTransaction *FinancialTransaction `protobuf:"bytes,7,opt,name=financial_transaction,json=financialTransaction,proto3,oneof"`
}

func (*TransformResponse_Permanode_Email) isTransformResponse_Permanode_Payload() {}

func (*TransformResponse_Permanode_FinancialTransaction) isTransformResponse_Permanode_Payload() {}

var File_rpc_dataq_proto protoreflect.FileDescriptor

var file_rpc_dataq_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x64, 0x61, 0x74, 0x61, 0x71, 0x1a, 0x10, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x72, 0x70, 0x63, 0x2f,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x0e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xc5, 0x02, 0x0a, 0x0f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x6f,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x71, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x52, 0x05, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x3a, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x08, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x1a, 0x84, 0x01, 0x0a,
	0x07, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x22, 0x36, 0x0a, 0x0c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x80, 0x02, 0x0a, 0x0e,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x05, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x52, 0x00, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xef,
	0x02, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12,
	0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x1a, 0xa8, 0x01,
	0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xfd, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x71, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xae, 0x04, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3c, 0x0a,
	0x08, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x08, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a,
	0xa6, 0x01, 0x0a, 0x07, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xb6, 0x01, 0x0a, 0x09, 0x50, 0x65, 0x72,
	0x6d, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x71, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x52, 0x0a, 0x15, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x69, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x14, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x95, 0x01, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xa1, 0x02, 0x0a, 0x10, 0x50, 0x65,
	0x72, 0x6d, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x6f, 0x64,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x52,
	0x0a, 0x15, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x14, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0xc7, 0x01,
	0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x51, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x3a, 0x0a,
	0x07, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x07, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x71, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x67, 0x6f, 0x2e, 0x71, 0x75,
	0x69, 0x6e, 0x6e, 0x2e, 0x69, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x71, 0x2f, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_dataq_proto_rawDescOnce sync.Once
	file_rpc_dataq_proto_rawDescData = file_rpc_dataq_proto_rawDesc
)

func file_rpc_dataq_proto_rawDescGZIP() []byte {
	file_rpc_dataq_proto_rawDescOnce.Do(func() {
		file_rpc_dataq_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_dataq_proto_rawDescData)
	})
	return file_rpc_dataq_proto_rawDescData
}

var file_rpc_dataq_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_rpc_dataq_proto_goTypes = []any{
	(*InstallRequest)(nil),              // 0: dataq.InstallRequest
	(*InstallResponse)(nil),             // 1: dataq.InstallResponse
	(*PluginConfig)(nil),                // 2: dataq.PluginConfig
	(*ExtractRequest)(nil),              // 3: dataq.ExtractRequest
	(*ExtractResponse)(nil),             // 4: dataq.ExtractResponse
	(*TransformRequest)(nil),            // 5: dataq.TransformRequest
	(*TransformResponse)(nil),           // 6: dataq.TransformResponse
	(*DataSource)(nil),                  // 7: dataq.DataSource
	(*PermanodeVersion)(nil),            // 8: dataq.PermanodeVersion
	(*InstallResponse_Extract)(nil),     // 9: dataq.InstallResponse.Extract
	nil,                                 // 10: dataq.ExtractRequest.MetadataEntry
	(*ExtractResponse_Transform)(nil),   // 11: dataq.ExtractResponse.Transform
	nil,                                 // 12: dataq.ExtractResponse.Transform.MetadataEntry
	nil,                                 // 13: dataq.TransformRequest.MetadataEntry
	(*TransformResponse_Extract)(nil),   // 14: dataq.TransformResponse.Extract
	(*TransformResponse_Permanode)(nil), // 15: dataq.TransformResponse.Permanode
	nil,                                 // 16: dataq.TransformResponse.Extract.MetadataEntry
	(*OAuth2)(nil),                      // 17: dataq.OAuth2
	(*Email)(nil),                       // 18: dataq.Email
	(*FinancialTransaction)(nil),        // 19: dataq.FinancialTransaction
}
var file_rpc_dataq_proto_depIdxs = []int32{
	2,  // 0: dataq.InstallResponse.configs:type_name -> dataq.PluginConfig
	17, // 1: dataq.InstallResponse.oauth:type_name -> dataq.OAuth2
	9,  // 2: dataq.InstallResponse.extracts:type_name -> dataq.InstallResponse.Extract
	17, // 3: dataq.ExtractRequest.oauth:type_name -> dataq.OAuth2
	10, // 4: dataq.ExtractRequest.metadata:type_name -> dataq.ExtractRequest.MetadataEntry
	11, // 5: dataq.ExtractResponse.transforms:type_name -> dataq.ExtractResponse.Transform
	13, // 6: dataq.TransformRequest.metadata:type_name -> dataq.TransformRequest.MetadataEntry
	14, // 7: dataq.TransformResponse.extracts:type_name -> dataq.TransformResponse.Extract
	15, // 8: dataq.TransformResponse.permanodes:type_name -> dataq.TransformResponse.Permanode
	7,  // 9: dataq.PermanodeVersion.source:type_name -> dataq.DataSource
	18, // 10: dataq.PermanodeVersion.email:type_name -> dataq.Email
	19, // 11: dataq.PermanodeVersion.financial_transaction:type_name -> dataq.FinancialTransaction
	2,  // 12: dataq.InstallResponse.Extract.configs:type_name -> dataq.PluginConfig
	12, // 13: dataq.ExtractResponse.Transform.metadata:type_name -> dataq.ExtractResponse.Transform.MetadataEntry
	16, // 14: dataq.TransformResponse.Extract.metadata:type_name -> dataq.TransformResponse.Extract.MetadataEntry
	18, // 15: dataq.TransformResponse.Permanode.email:type_name -> dataq.Email
	19, // 16: dataq.TransformResponse.Permanode.financial_transaction:type_name -> dataq.FinancialTransaction
	0,  // 17: dataq.DataQPlugin.Install:input_type -> dataq.InstallRequest
	3,  // 18: dataq.DataQPlugin.Extract:input_type -> dataq.ExtractRequest
	5,  // 19: dataq.DataQPlugin.Transform:input_type -> dataq.TransformRequest
	1,  // 20: dataq.DataQPlugin.Install:output_type -> dataq.InstallResponse
	4,  // 21: dataq.DataQPlugin.Extract:output_type -> dataq.ExtractResponse
	6,  // 22: dataq.DataQPlugin.Transform:output_type -> dataq.TransformResponse
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_rpc_dataq_proto_init() }
func file_rpc_dataq_proto_init() {
	if File_rpc_dataq_proto != nil {
		return
	}
	file_rpc_schema_proto_init()
	file_rpc_oauth2_proto_init()
	file_rpc_dataq_proto_msgTypes[4].OneofWrappers = []any{
		(*ExtractResponse_Hash)(nil),
		(*ExtractResponse_Content)(nil),
	}
	file_rpc_dataq_proto_msgTypes[5].OneofWrappers = []any{
		(*TransformRequest_Hash)(nil),
		(*TransformRequest_Content)(nil),
	}
	file_rpc_dataq_proto_msgTypes[8].OneofWrappers = []any{
		(*PermanodeVersion_Email)(nil),
		(*PermanodeVersion_FinancialTransaction)(nil),
	}
	file_rpc_dataq_proto_msgTypes[15].OneofWrappers = []any{
		(*TransformResponse_Permanode_Email)(nil),
		(*TransformResponse_Permanode_FinancialTransaction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_dataq_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_dataq_proto_goTypes,
		DependencyIndexes: file_rpc_dataq_proto_depIdxs,
		MessageInfos:      file_rpc_dataq_proto_msgTypes,
	}.Build()
	File_rpc_dataq_proto = out.File
	file_rpc_dataq_proto_rawDesc = nil
	file_rpc_dataq_proto_goTypes = nil
	file_rpc_dataq_proto_depIdxs = nil
}

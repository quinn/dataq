package ui

import (
	"fmt"
	"github.com/google/uuid"
)

templ JsonBrowser(data any) {
	{{
		var encoded bool
		if _, ok := data.([]byte); ok {
			encoded = true
		}
	}}
	<div>
		<div role="data-container" data-is-encoded={ fmt.Sprintf("%t", encoded) }>
			if encoded {
				@templ.JSONScript(uuid.NewString(), string(data.([]byte)))
			} else {
				@templ.JSONScript(uuid.NewString(), data)
			}
		</div>
		<div role="json-viewer" class="p-1 rounded bg-slate-100 dark:bg-slate-950 border border-slate-200 dark:border-slate-800"></div>
		<script>
			{
				const jsonViewer = me('[role="json-viewer"]', me())
				const dataContainer = me('[role="data-container"]', me())
				const script = dataContainer.querySelector('script')
				const jsonData = dataContainer.dataset.isEncoded === 'false'
					? script.textContent
					: JSON.parse(script.textContent)

				const data = JSON.parse(jsonData)

				if (!window.renderJson) {
					document.addEventListener('renderJsonReady', () => {
						jsonViewer.appendChild(window.renderJson(data))
					})
				} else {
					jsonViewer.appendChild(window.renderJson(data))
				}
				// new JsonViewer({ 
				// 	value: data, 
				// 	theme: 'auto',
				// 	valueTypes: [
				// 		JsonViewer.Utils.defineDataType({
				// 			is: function(value, path) {
				// 				// check for string
				// 				if (typeof value === 'string') {
				// 					if (value.startsWith('sha224-')) {
				// 						return true;
				// 					}
				// 				}
				// 			}
				// 			// Component:
				// 		})
				// 	]
				// }).render(jsonViewer)
			}
		</script>
	</div>
}

package pages

import (
	"github.com/labstack/echo/v4"
	"go.quinn.io/dataq/internal/middleware"
	"go.quinn.io/dataq/schema"
	"go.quinn.io/dataq/ui"
	"golang.org/x/oauth2"
	"net/http"
)

type PluginIdOauthBeginData struct {
	plugin      schema.PluginInstance
	redirectURL string
}

func PluginIdOauthBeginGET(c echo.Context, id string) (PluginIdOauthBeginData, error) {
	b := middleware.GetBoot(c)
	var data PluginIdOauthBeginData

	if err := b.Index.GetPermanode(c.Request().Context(), id, &data.plugin); err != nil {
		return data, err
	}

	if data.plugin.OauthConfig.RedirectURL == "" {
		redirectURL := middleware.FullURL(c)
		redirectURL.Path = "/plugin/" + id + "/oauth/complete"
		data.redirectURL = redirectURL.String()

		data.plugin.OauthConfig.RedirectURL = redirectURL.String()
		if _, err := b.Index.UpdatePermanode(c.Request().Context(), id, &data.plugin); err != nil {
			return data, err
		}
	} else {
		data.redirectURL = data.plugin.OauthConfig.RedirectURL
	}

	return data, nil
}

func PluginIdOauthBeginPOST(c echo.Context, id string) error {
	b := middleware.GetBoot(c)

	var plugin schema.PluginInstance
	if err := b.Index.GetPermanode(c.Request().Context(), id, &plugin); err != nil {
		return err
	}

	authURL := plugin.OauthConfig.AuthCodeURL("state-token", oauth2.AccessTypeOffline)

	return c.Redirect(http.StatusFound, authURL)
}

templ PluginIdOauthBegin(data PluginIdOauthBeginData) {
	@ui.Layout() {
		<div class="space-y-3">
			<div class="font-bold">Connect Oauth</div>
			<p>Click "Connect Oauth" below to connect DataQ to your { data.plugin.Label } instance.</p>
			<p>Before continuing, please copy and paste the following URL into your oauth app settings:</p>
			<pre class="card p-3">{ data.redirectURL }</pre>
			<form method="post">
				<button class="underline block" type="submit">Connect Oauth</button>
			</form>
		</div>
	}
}

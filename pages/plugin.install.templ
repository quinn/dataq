package pages

import (
	"fmt"
	"github.com/labstack/echo/v4"
	"go.quinn.io/dataq/internal/middleware"
	"go.quinn.io/dataq/rpc"
	"go.quinn.io/dataq/ui"
	"strings"
)

type PluginInstallData struct {
	install  *rpc.InstallResponse
	plugins  []string
	selected string
}

func PluginInstallHandler(c echo.Context) (PluginInstallData, error) {
	b := middleware.GetBoot(c)
	data := PluginInstallData{}
	pluginID := c.QueryParam("plugin")
	for key := range b.Plugins.Clients {
		data.plugins = append(data.plugins, key)
	}

	if pluginID != "" {
		client, ok := b.Plugins.Clients[pluginID]
		if !ok {
			return data, fmt.Errorf("plugin not found: %s", pluginID)
		}

		data.selected = pluginID
		var err error
		data.install, err = client.Install(c.Request().Context(), &rpc.InstallRequest{PluginId: pluginID})
		if err != nil {
			return data, fmt.Errorf("failed to install plugin: %w", err)
		}

	}
	return data, nil
}

templ PluginInstall(data PluginInstallData) {
	@ui.Layout() {
		<div class="space-y-3">
			<div class="font-bold">Install</div>
			<form
				action={ templ.URL("/plugin/install") }
				method="get"
				onchange="this.submit()"
			>
				<select name="plugin" class="input">
					<option value="">Select Plugin</option>
					for _, plugin := range data.plugins {
						<option value={ plugin } selected?={ plugin == data.selected }>{ plugin }</option>
					}
				</select>
			</form>
			<hr/>
			if data.install != nil {
				<div class="font-bold">Config</div>
				<form method="post">
					<input type="hidden" name="plugin_id" value={ data.selected }/>
					for _, config := range data.install.Configs {
						<div class="space-y-1">
							<label for={ config.Key }>{ config.Label }</label>
							<input
								class="input"
								type="text"
								name={ config.Key }
							/>
						</div>
					}
					if data.install.OauthConfig != nil {
						<input type="hidden" name="auth_url" value={ data.install.OauthConfig.AuthUrl }/>
						<input type="hidden" name="token_url" value={ data.install.OauthConfig.TokenUrl }/>
						<input type="hidden" name="scopes" value={ strings.Join(data.install.OauthConfig.Scopes, ",") }/>
						<label class="block" for="client_id">Client ID</label>
						<input class="input mb-3" type="text" name="client_id"/>
						<label class="block" for="client_secret">Client Secret</label>
						<input class="input mb-3" type="text" name="client_secret"/>
						<button class="underline block" type="submit">Install & Connect Oauth</button>
					} else {
						<button class="underline block" type="submit">Install</button>
					}
				</form>
			}
		</div>
	}
}

package pages

import (
	"fmt"
	"github.com/labstack/echo/v4"
	"go.quinn.io/dataq/internal/middleware"
	"go.quinn.io/dataq/schema"
	"go.quinn.io/dataq/ui"
	"net/http"
)

type PluginIdEditData struct {
	plugin schema.PluginInstance
	id     string
}

func PluginIdEditGET(c echo.Context, id string) (PluginIdEditData, error) {
	b := middleware.GetBoot(c)

	var data PluginIdEditData
	data.id = id

	if err := b.Index.GetPermanode(c.Request().Context(), id, &data.plugin); err != nil {
		return data, fmt.Errorf("failed to get plugin: %w", err)
	}

	return data, nil
}

func PluginIdEditPOST(c echo.Context, id string) error {
	b := middleware.GetBoot(c)

	if c.FormValue("delete") == "true" {
		if err := b.Index.Delete(c.Request().Context(), id); err != nil {
			return fmt.Errorf("failed to delete plugin: %w", err)
		}

		return c.Redirect(http.StatusFound, "/")
	}

	var plugin schema.PluginInstance
	if err := b.Index.GetPermanode(c.Request().Context(), id, &plugin); err != nil {
		return fmt.Errorf("failed to get plugin: %w", err)
	}

	var form struct {
		ClientID     string `form:"client_id"`
		ClientSecret string `form:"client_secret"`
	}

	if err := c.Bind(&form); err != nil {
		return fmt.Errorf("failed to bind form: %w", err)
	}

	plugin.OauthConfig.ClientID = form.ClientID
	plugin.OauthConfig.ClientSecret = form.ClientSecret

	if _, err := b.Index.UpdatePermanode(c.Request().Context(), id, &plugin); err != nil {
		return fmt.Errorf("failed to update plugin: %w", err)
	}

	return c.Redirect(http.StatusFound, c.Request().RequestURI)
}

templ PluginIdEdit(data PluginIdEditData) {
	{{ plugin := data.plugin }}
	@ui.Layout() {
		<h2>Edit Plugin</h2>
		<div class="space-y-3">
			@ui.JsonBrowser(plugin)
			<form method="post" class="space-y-3">
				<div>
					<label for="client_id">Client ID</label><br/>
					<input class="input" type="text" name="client_id" value={ plugin.OauthConfig.ClientID }/>
				</div>
				<div>
					<label for="client_secret">Client Secret</label><br/>
					<input class="input" type="text" name="client_secret" value={ plugin.OauthConfig.ClientSecret }/>
				</div>
				<button class="underline" type="submit">Save</button>
			</form>
			<form method="post">
				<input type="hidden" name="delete" value="true"/>
				<button class="underline text-red-700" type="submit">Delete</button>
			</form>
			<a class="underline block" href={ templ.URL("/plugin/" + data.id + "/oauth/begin") }>Connect Oauth</a>
		</div>
	}
}

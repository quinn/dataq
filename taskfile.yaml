version: '3'

vars:
  RUN_BIN: '{{if eq OS "windows"}}.\tmp\main.exe{{else}}./tmp/main{{end}}'
  BUILD_BIN: '{{if eq OS "windows"}}tmp/main.exe{{else}}./tmp/main{{end}}'
  BIN_SUFFIX: '{{if eq OS "windows"}}.exe{{end}}'

tasks:
  install-tools:
    cmds:
      - go install golang.org/x/tools/cmd/goimports@latest
      - go install github.com/srikrsna/protoc-gen-gotag@latest
      - go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

  gen-templ:
    cmds:
      - |
        go run github.com/a-h/templ/cmd/templ@latest generate

  live:templ:
    cmds:
      - figlet "Running templ..."
      - |
        go run github.com/a-h/templ/cmd/templ@latest generate \
          --watch \
          --proxy="http://localhost:3000" \
          --open-browser=false

  gen-pages:
    cmds:
      - |
        go run go.quinn.io/ccf/cmd/generate/pages@latest \
          -pages pages \
          -output internal/router/router.notgo \
          -package router && \
        goimports -w internal/router/router.notgo && \
        mv internal/router/router.notgo internal/router/router.go

  live:pages:
    cmds:
      - figlet "Generating pages..."
      - |
        go run github.com/cosmtrek/air@v1.51.0 \
          --build.cmd "task gen-pages" \
          --build.bin "true" \
          --build.delay "100" \
          --build.exclude_dir "" \
          --build.include_dir "pages" \
          --build.include_ext "go"

  gen-content:
    cmds:
      - |
        go run go.quinn.io/ccf/cmd/generate/content@latest \
          -content content

  live:content:
    cmds:
      - figlet "Generating content..."
      - |
        go run github.com/cosmtrek/air@v1.51.0 \
          --build.cmd "task gen-content" \
          --build.bin "true" \
          --build.delay "100" \
          --build.exclude_dir "" \
          --build.include_dir "content" \
          --build.include_ext "md"

  build-server:
    cmds:
      - cmd: go build -o {{ .BUILD_BIN }} cmd/host/main.go

  live:server:
    cmds:
      - figlet "Running server..."
      - |
        go run github.com/cosmtrek/air@v1.51.0 \
          --build.cmd "task build-server && templ generate --notify-proxy" \
          --build.full_bin "{{ .RUN_BIN }}" \
          --build.args_bin "-mode=web" \
          --build.delay "100" \
          --build.include_ext "go" \
          --build.stop_on_error "false" \
          --misc.clean_on_exit true

  gen-tailwind:
    cmds:
      - |
        tailwindcss \
          -i ./tailwind.css \
          -o ./internal/web/public/styles.css

  live:tailwind:
    cmds:
      - figlet "Running tailwindcss..."
      - |
        tailwindcss \
          -i ./tailwind.css \
          -o ./internal/web/public/styles.css \
          --watch

  live:assets:
    cmds:
      - figlet "Generating assets..."
      - |
        go run github.com/cosmtrek/air@v1.51.0 \
          --build.cmd "templ generate --notify-proxy" \
          --build.bin "true" \
          --build.delay "100" \
          --build.exclude_dir "" \
          --build.include_dir "internal/web/public" \
          --build.include_ext "css"

  gen-rpc:
    cmds:
      - |
        protoc \
          --go_out=. \
          --go_opt=paths=source_relative \
          --go-grpc_out=. \
          --go-grpc_opt=paths=source_relative \
          --dataq-index_out=. \
          --dataq-index_opt=paths=source_relative \
          --proto_path=. \
          rpc/schema.proto rpc/dataq.proto

  build-plugins:
    cmds:
      - for: ['filescan', 'gmail', 'fitbit']
        cmd: |
          go build \
            -o $HOME/.config/dataq/state/bin/{{ .ITEM }}{{ .BIN_SUFFIX }} \
            ./cmd/plugins/{{ .ITEM }}

  live:
    cmds:
      - |
        task -p \
          live:templ \
          live:pages \
          live:content \
          live:tailwind \
          live:assets \
          live:server

  build:
    cmds:
      - |
        task \
          gen-templ \
          gen-pages \
          gen-content \
          gen-tailwind \
          build-server \
          build-plugins

  default:
    cmds:
      - "{{ .RUN_BIN }} {{ .CLI_ARGS }}"

  reset:
    cmds:
      - rm -rfv ~/.cache/perkeep
      - rm -rfv ~/var/perkeep/blobs/sha224
      - go run cmd/index/main.go
